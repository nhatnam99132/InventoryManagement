@model InventoryManagement.PaginatedList.PageListInventory<InventoryManagement.Models.Inventory>
@*@model InventoryManagement.Models.ProductCategoryViewModel*@

@{
    ViewData["Title"] = "Inventory Manager";
}

<h1>Inventory</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Inventory" asp-action="Index" method="get">
    <p>
        Search by name: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Product Name</a>
            </th>
            <th>
                Category
            </th>
            <th>
                Warehouse Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Quantity</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Product.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Category.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Warehouse.WarehouseName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>

            <td>
            <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
            <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
            @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
        </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
