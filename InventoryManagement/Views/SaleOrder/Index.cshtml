@model InventoryManagement.PaginatedList.PaginatedListSaleOrder<InventoryManagement.Models.SaleOrder>
@*@model InventoryManagement.Models.ProductCategoryViewModel*@

@{
    ViewData["Title"] = "SaleOrder Manager";
}

<h1>Sale Order</h1>

<p>
    <a asp-action="Create">Create New </a> ||
    <a asp-area="" asp-controller="SaleOrderDetail" asp-action="Index"> View Sale Order Detail</a>
</p>
<form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search" asp-controller="SaleOrder" asp-action="Index" method="get">
    <p>
        <input type="text" name="SearchString" class="form-control bg-light" placeholder="Search for..."
               aria-label="Search" aria-describedby="basic-addon2" />
        <button class="btn btn-primary" type="submit" value="Filter">
            <i class="fas fa-search fa-sm"></i>
        </button>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Customer Name</a>
            </th>
            <th>
               Warehouse Name
            </th>
            <th>
                SaleOrder Type
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Created Date</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Warehouse.WarehouseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sotype)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
