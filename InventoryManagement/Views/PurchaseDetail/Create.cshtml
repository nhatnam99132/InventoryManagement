@model InventoryManagement.Models.ViewModel.PurchaseDetailVM

@{
    ViewData["Title"] = "Create Purchase Detail";
}

<h1>Create Purchase Detail</h1>

<h4>Purchase Detail</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="formPurchase">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.Poid" class="control-label"></label>
                <select class="form-control" asp-for="PurchaseDetail.Poid" asp-items="Model.PurchaseOrders" id="purchase">
                    <option value="">---- Select Purchase Order -----</option>
                </select>
                <span asp-validation-for="PurchaseDetail.Poid" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden"  class="form-control" value="0" disabled id="warehouse" />
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.ProductId" class="control-label"></label>
                <select class="form-control" asp-for="PurchaseDetail.ProductId" asp-items="Model.Products">
                    <option value="">---- Select Product -----</option>
                </select>
                <span asp-validation-for="PurchaseDetail.ProductId" class="text-danger"></span>
            </div>
            @*<div class="form-group">
            <label class="control-label">Inventory Product</label>
            <input class="form-control" value="0" disabled id="inventory"/>
        </div>*@
            <div class="form-group">
                <label asp-for="PurchaseDetail.Quantity" class="control-label"></label>
                <input asp-for="PurchaseDetail.Quantity" class="form-control input1" id="Quantity" />
                <span asp-validation-for="PurchaseDetail.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.Price" class="control-label"></label>
                <input asp-for="PurchaseDetail.Price" class="form-control input1" id="Price" />
                <span asp-validation-for="PurchaseDetail.Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.Vat" class="control-label"></label>
                <input asp-for="PurchaseDetail.Vat" class="form-control" id="inputVat" />
                <span asp-validation-for="PurchaseDetail.Vat" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.Discount" class="control-label"></label>
                <input asp-for="PurchaseDetail.Discount" class="form-control" id="inputDiscount" />
                <span asp-validation-for="PurchaseDetail.Discount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.PriceAfterDiscount" class="control-label"></label>
                <input asp-for="PurchaseDetail.PriceAfterDiscount" class="form-control" readonly id="inputAfter" />
                <span asp-validation-for="PurchaseDetail.PriceAfterDiscount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseDetail.TotalAmount" class="control-label"></label>
                <input asp-for="PurchaseDetail.TotalAmount" class="form-control" readonly id="inputTotalAmount" />
                <span asp-validation-for="PurchaseDetail.TotalAmount" class="text-danger"></span>
            </div>

            @*<div class="form-group">
            <label asp-for="CreatedDate" class="control-label"></label>
            <input asp-for="CreatedDate" class="form-control" />
            <span asp-validation-for="CreatedDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="UpdatedDate" class="control-label"></label>
            <input asp-for="UpdatedDate" class="form-control" />
            <span asp-validation-for="UpdatedDate" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="CreatedBy" class="control-label"></label>
            <input asp-for="CreatedBy" class="form-control" />
            <span asp-validation-for="CreatedBy" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="UpdatedBy" class="control-label"></label>
            <input asp-for="UpdatedBy" class="form-control" />
            <span asp-validation-for="UpdatedBy" class="text-danger"></span>
        </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    $("#purchase").on("change", function (e) {
        // alert(this.value);
        //debugger;
        var Id = this.value;

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetWarehouse", "PurchaseDetail")",
            data: { saleOrderId: Id },
            //contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                //debugger;
                $('#warehouse').val(result.warehouseId);
                console.log(result)
            },
            error: function (response) {
                //debugger;
                $('#warehouse').val("Error Warehouse");
                console.log(response);
            }
        });
    });
    $("#saleorder").on("change", function (e) {
        // alert(this.value);
        //debugger;
        var Id = this.value;

        $.ajax({
            type: "GET",
            url: "GetWarehouse",
            data: { saleOrderId: Id },
            //contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                //debugger;
                $('#warehouse').val(result.warehouseId);
                console.log(result)
            },
            error: function (response) {
                //debugger;
                $('#warehouse').val("Error Warehouse");
                console.log(response);
            }
        });
    })
</script>
}
